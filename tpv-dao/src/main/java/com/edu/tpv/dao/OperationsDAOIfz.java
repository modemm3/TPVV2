package com.edu.tpv.dao;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.IdentityHashMap;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.Vector;
import java.util.WeakHashMap;

import com.edu.tpv.login.entity.InterfaceEntityBase;

public interface OperationsDAOIfz
{
    public InterfaceEntityBase save(InterfaceEntityBase entity);
    public InterfaceEntityBase saveSinTx(InterfaceEntityBase entity);
    public InterfaceEntityBase modify(InterfaceEntityBase entity);
    public InterfaceEntityBase modifySinTx(InterfaceEntityBase entity);
    public InterfaceEntityBase delete(InterfaceEntityBase entity);
    public InterfaceEntityBase deleteSintTx(InterfaceEntityBase entity);
    public InterfaceEntityBase findById(InterfaceEntityBase entity);
    public InterfaceEntityBase findByIdC(InterfaceEntityBase entity);
    public InterfaceEntityBase findByIdSinTx(InterfaceEntityBase entity);
    public InterfaceEntityBase findByIdCSinTx(InterfaceEntityBase entity);
    public InterfaceEntityBase findEntityByQuery(InterfaceEntityBase entity);
    public InterfaceEntityBase findEntityByQuerySinTx(InterfaceEntityBase entity);
    public LinkedList<InterfaceEntityBase> listDataLL(InterfaceEntityBase entity);
    public ArrayList<InterfaceEntityBase> listDataAL(InterfaceEntityBase entity);
    public ArrayList<InterfaceEntityBase> listDataALPaginate(InterfaceEntityBase entity);
    public Vector<InterfaceEntityBase> listDataV(InterfaceEntityBase entity);
    public TreeSet<InterfaceEntityBase> listDataTS(InterfaceEntityBase entity);
    public LinkedHashSet<InterfaceEntityBase> listDataLHS(InterfaceEntityBase entity);
    public HashSet<InterfaceEntityBase> listDataHS(InterfaceEntityBase entity);
    public Hashtable<Integer, InterfaceEntityBase> listDataHT(InterfaceEntityBase entity);
    public TreeMap<Integer, InterfaceEntityBase> listDataTM(InterfaceEntityBase entity);
    public LinkedHashMap<Integer, InterfaceEntityBase> listDataLHM(InterfaceEntityBase entity);
    public IdentityHashMap<Integer, InterfaceEntityBase> listDataIHM(InterfaceEntityBase entity);
    public HashMap<Integer, InterfaceEntityBase> listDataHM(InterfaceEntityBase entity);
    public WeakHashMap<Integer, InterfaceEntityBase> listDataWHM(InterfaceEntityBase entity);
    public LinkedList<InterfaceEntityBase> listDataSinTxLL(InterfaceEntityBase entity);
    public ArrayList<InterfaceEntityBase> listDataSinTxAL(InterfaceEntityBase entity);
    public Vector<InterfaceEntityBase> listDataSinTxV(InterfaceEntityBase entity);
    public TreeSet<InterfaceEntityBase> listDataSinTxTS(InterfaceEntityBase entity);
    public LinkedHashSet<InterfaceEntityBase> listDataSinTxLHS(InterfaceEntityBase entity);
    public HashSet<InterfaceEntityBase> listDataSinTxHS(InterfaceEntityBase entity);
    public Hashtable<Integer, InterfaceEntityBase> listDataSinTxHT(InterfaceEntityBase entity);
    public TreeMap<Integer, InterfaceEntityBase> listDataSinTxTM(InterfaceEntityBase entity);
    public LinkedHashMap<Integer, InterfaceEntityBase> listDataSinTxLHM(InterfaceEntityBase entity);
    public IdentityHashMap<Integer, InterfaceEntityBase> listDataSinTxIHM(InterfaceEntityBase entity);
    public HashMap<Integer, InterfaceEntityBase> listDataSinTxHM(InterfaceEntityBase entity);
    public WeakHashMap<Integer, InterfaceEntityBase> listDataSinTxWHM(InterfaceEntityBase entity);
    public LinkedList<InterfaceEntityBase> findByDescriptionLL(InterfaceEntityBase entity);
    public ArrayList<InterfaceEntityBase> findByDescriptionAL(InterfaceEntityBase entity);
    public Vector<InterfaceEntityBase> findByDescriptionV(InterfaceEntityBase entity);
    public TreeSet<InterfaceEntityBase> findByDescriptionTS(InterfaceEntityBase entity);
    public LinkedHashSet<InterfaceEntityBase> findByDescriptionLHS(InterfaceEntityBase entity);
    public HashSet<InterfaceEntityBase> findByDescriptionHS(InterfaceEntityBase entity);
    public Hashtable<Integer, InterfaceEntityBase> findByDescriptionHT(InterfaceEntityBase entity);
    public TreeMap<Integer, InterfaceEntityBase> findByDescriptionTM(InterfaceEntityBase entity);
    public LinkedHashMap<Integer, InterfaceEntityBase> findByDescriptionLHM(InterfaceEntityBase entity);
    public IdentityHashMap<Integer, InterfaceEntityBase> findByDescriptionIHM(InterfaceEntityBase entity);
    public HashMap<Integer, InterfaceEntityBase> findByDescriptionHM(InterfaceEntityBase entity);
    public WeakHashMap<Integer, InterfaceEntityBase> findByDescriptionWHM(InterfaceEntityBase entity);
    public LinkedList<InterfaceEntityBase> findByDescriptionSinTxLL(InterfaceEntityBase entity);
    public ArrayList<InterfaceEntityBase> findByDescriptionSinTxAL(InterfaceEntityBase entity);
    public Vector<InterfaceEntityBase> findByDescriptionSinTxV(InterfaceEntityBase entity);
    public TreeSet<InterfaceEntityBase> findByDescriptionSinTxTS(InterfaceEntityBase entity);
    public LinkedHashSet<InterfaceEntityBase> findByDescriptionSinTxLHS(InterfaceEntityBase entity);
    public HashSet<InterfaceEntityBase> findByDescriptionSinTxHS(InterfaceEntityBase entity);
    public Hashtable<Integer, InterfaceEntityBase> findByDescriptionSinTxHT(InterfaceEntityBase entity);
    public TreeMap<Integer, InterfaceEntityBase> findByDescriptionSinTxTM(InterfaceEntityBase entity);
    public LinkedHashMap<Integer, InterfaceEntityBase> findByDescriptionSinTxLHM(InterfaceEntityBase entity);
    public IdentityHashMap<Integer, InterfaceEntityBase> findByDescriptionSinTxIHM(InterfaceEntityBase entity);
    public HashMap<Integer, InterfaceEntityBase> findByDescriptionSinTxHM(InterfaceEntityBase entity);
    public WeakHashMap<Integer, InterfaceEntityBase> findByDescriptionSinTxWHM(InterfaceEntityBase entity);
    public LinkedList<InterfaceEntityBase> findByQueryLL(InterfaceEntityBase entity);
    public ArrayList<InterfaceEntityBase> findByQueryAL(InterfaceEntityBase entity);
    public Vector<InterfaceEntityBase> findByQueryV(InterfaceEntityBase entity);
    public TreeSet<InterfaceEntityBase> findByQueryTS(InterfaceEntityBase entity);
    public LinkedHashSet<InterfaceEntityBase> findByQueryLHS(InterfaceEntityBase entity);
    public HashSet<InterfaceEntityBase> findByQueryHS(InterfaceEntityBase entity);
    public Hashtable<Integer, InterfaceEntityBase> findByQueryHT(InterfaceEntityBase entity);
    public TreeMap<Integer, InterfaceEntityBase> findByQueryTM(InterfaceEntityBase entity);
    public LinkedHashMap<Integer, InterfaceEntityBase> findByQueryLHM(InterfaceEntityBase entity);
    public IdentityHashMap<Integer, InterfaceEntityBase> findByQueryIHM(InterfaceEntityBase entity);
    public HashMap<Integer, InterfaceEntityBase> findByQueryHM(InterfaceEntityBase entity);
    public WeakHashMap<Integer, InterfaceEntityBase> findByQueryWHM(InterfaceEntityBase entity);
    public LinkedList<InterfaceEntityBase> findByQuerySinTxLL(InterfaceEntityBase entity);
    public ArrayList<InterfaceEntityBase> findByQuerySinTxAL(InterfaceEntityBase entity);
    public Vector<InterfaceEntityBase> findByQuerySinTxV(InterfaceEntityBase entity);
    public TreeSet<InterfaceEntityBase> findByQuerySinTxTS(InterfaceEntityBase entity);
    public LinkedHashSet<InterfaceEntityBase> findByQuerySinTxLHS(InterfaceEntityBase entity);
    public HashSet<InterfaceEntityBase> findByQuerySinTxHS(InterfaceEntityBase entity);
    public Hashtable<Integer, InterfaceEntityBase> findByQuerySinTxHT(InterfaceEntityBase entity);
    public TreeMap<Integer, InterfaceEntityBase> findByQuerySinTxTM(InterfaceEntityBase entity);
    public LinkedHashMap<Integer, InterfaceEntityBase> findByQuerySinTxLHM(InterfaceEntityBase entity);
    public IdentityHashMap<Integer, InterfaceEntityBase> findByQuerySinTxIHM(InterfaceEntityBase entity);
    public HashMap<Integer, InterfaceEntityBase> findByQuerySinTxHM(InterfaceEntityBase entity);
    public WeakHashMap<Integer, InterfaceEntityBase> findByQuerySinTxWHM(InterfaceEntityBase entity);
    public Timestamp getDateCurrent() throws Exception;
    public Timestamp getDateCurrentSinTx() throws Exception;
    public TransaccionHibernateIfz launchesTransaction(TransaccionHibernateIfz tx) throws Exception;
    public TransactionHibernateQueryIfz launchesTransactionQuery(TransactionHibernateQueryIfz tx) throws Exception;
    public InterfaceEntityBase getById(InterfaceEntityBase entity);
    public InterfaceEntityBase getByIdSinTx(InterfaceEntityBase entity);
    public InterfaceEntityBase getByIdCSinTx(InterfaceEntityBase entity);
    public InterfaceEntityBase getByIdC(InterfaceEntityBase entity);
    public InterfaceEntityBase getLastIdSintTx(InterfaceEntityBase entity);
    public InterfaceEntityBase getLastId(InterfaceEntityBase entity);
    public InterfaceEntityBase getTotalRegSinTx(InterfaceEntityBase entity);
    public InterfaceEntityBase getTotalRegByQuerySinTx(InterfaceEntityBase entity);
    public ArrayList<Object> findByQueryJoinSinTxAL(InterfaceEntityBase entity);
    public ArrayList<List<Object>> listDataSQLAL(InterfaceEntityBase entity);
    public ArrayList<List<Object>> listDataSQLSinTxAL(InterfaceEntityBase entity);
    public InterfaceEntityBase executeACID(InterfaceEntityBase entity);
    public InterfaceEntityBase executeACIDSinTx(InterfaceEntityBase entity);
    public InterfaceEntityBase modifyByQuerySinTx(InterfaceEntityBase entity);

    InterfaceEntityBase deleteByQuerySintTx(InterfaceEntityBase entity);

}
